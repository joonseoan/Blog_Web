-- reactstrap : folow reactStrap discover

---- font setup -----
1. visit: https://fonts.google.com/
2. Click "+" to download fonts we will use.
    (We will use "Montserrat")
3. After download, copy fonts inside the zip file.
4. mkdir "static" under project directory.
   mkdir "fonts" under "static"
   Then paste the copied fonts inside of "fonts" folder.


------------------ Typed.js ----------------
   1. Google it: React-typed.js


--------------- Auth 0 --------------------- 
1. Visit: auth0.com (my login: google 74)
2. Signup
3. Click "Create App"
4. Input Name
5. Select "SinglePageWeb"
6. Click Create
7. Click Setting at the top
8. At the "Allowed Callback URLs": http://localhost:3000/callback
9. At the "Allowed Web Origins": http://localhost:3000
10. At the "Allowed Logout URLs" : http://localhost:3000
11. Save Change
12. Quick Start

Domain: dev-plzr7dqq.auth0.com
ClientID: jjVFFtU7i1LRLUQuIJzhYl2TPNR9bz3K
ClientSecret: DBOi3PeOlfmgdnwcIt1Mc3svFklmh5XZzSabTGsiYTUZdjtpOOkFTBdrvdxPSEi8

13. Select React for Tech
14. Found Install auth0
15. Install "npm install --save auth0-js@9.10.2"
 
// Auth0 Callback setup
16. Click quick setting and Click React
17. Get the frame code here
-----Start Code in "services" folder

// Google Client ID setup

(created this credential with joonseo.an180)
18. Click "connection" - "social" at the left bar
19. Click Google
20. Click "How to obtain a ClientID" in ClientID Input
21. Visit console.developers.google.com
22. Click "Select Project"
23. Click "New Project" at the right-top
24. Enter "project name"
25. Click "create project"
26. Consent OAuth 
27. Create Credentials
27. "Create OAuth client ID"
28. Enter Project Name
29. At Authorized Javascript Origins
    => https:domainFromAuth0(dev-plzr7dqq.auth0.com)
    --! must click  "authorised domains list" and enter domain name to "authorized domain" without "https"
30 At Authorized redirect URIs
    => https:domainFromAuth0(dev-plzr7dqq.auth0.com)/login/callback

31: OAuth
   clientID: 608209956825-phmnsanomn9uj5q32tj0c7hqf96807um.apps.googleusercontent.com
   clientSecret: S_I4wtX9EW8SiGYUZnswny0p


32, Gibacj to "CONNECTION" => "Social" in auth0 web
33. Enter google client id at "ClientID" and "ClientSecret"
34. Save



-------- cooke setup -----------------

1. GOOGE "js-cookie"
2. npm i --save js-cookie


--------- express-jwt -------
In order to work with Auth0,
just install express-jwt instead of jsonwebtoken in the server
npm i --save express-jwt
npm i --save jwks-rsa 


-------- Auth0 User Rule SETUP --------
1.  Google  "rules auth0"
2. visit : https://auth0.com/docs/rules
3. At the page, find "What can I use Rules for"
4. Find "Add roles to a user"
5. Visit Auth0 and login 
6. In the left side menu, click "rules"
7. Click "create rule"
8. Click "empty rule"
9. Type 

function (user, context, callback) {
  const namespace = 'http://localhost:3000';
  if(user.email === 'joonseo74@gmail.com') {
    context.idToken[namespace + '/role'] = 'app owner';
  } else {
    context.idToken[namespace + '/role'] = 'visitor';
  }
  
  callback(null, user, context);
  
}

10. Save it
11. Click again "rules" in the sidebar menu.
12. Go to Browser with app and get logout/login and then get token in the cookie
13. Copy JWT AND Go to "jwt io" and then try to parse it.
14. Try to find role info when jwt is parsed. If it exists. great!!!!!!
For instance

http://localhost:3000/role": "app owner",

